name: CI Build

on:
  pull_request:
    types: [opened, reopened]
  push:
    branches:
      - "develop"

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: usdotfhwastoldev/carma-base:buildtime
      env:
        INIT_ENV: "/home/carma/.base-image/init-env.sh"
        TERM: xterm # use xterm to get full display output from build
      options: --user root
    steps:
      - name: Symlink bash to sh
        run: |
          ln -sf /bin/bash /bin/sh # otherwise source command does not work in scripts

      - name: Create src dir
        run: mkdir -p /opt/carma/src

      - name: Checkout
        run: git clone --depth 1 $GITHUB_SERVER_URL/$GITHUB_REPOSITORY -b $GITHUB_REF_NAME /opt/carma/src/CARMANovatelGpsDriver

      - name: Pull deps
        run: |
          source /home/carma/.base-image/init-env.sh
          bash /opt/carma/src/CARMANovatelGpsDriver/docker/checkout.bash -r /opt/carma

      - name: Build Driver
        run: |
          source /home/carma/.base-image/init-env.sh
          export ROS_PARALLEL_JOBS='-j3 -l3' # Try to reduce memory consumption on build
          build-wrapper-linux-x86-64 --out-dir /opt/carma/bw-output bash make_with_coverage.bash -m -e /opt/carma/ -o /opt/carma/coverage_reports/gcov

      - name: Run C++ Tests
        run: |
          source "$INIT_ENV"
          export ROS_PARALLEL_JOBS='-j3 -l3' # Try to reduce memory consumption on build
          cd /opt/carma
          bash make_with_coverage.bash -t -e /opt/carma/ -o /opt/carma/coverage_reports/gcov

      - name: ls content
        run: |
          echo "/opt/carma"
          ls /opt/carma
          echo "/opt/carma/src/"
          ls /opt/carma/src/
          echo "/opt/carma/src/CARMANovatelGpsDriver"
          ls /opt/carma/src/CARMANovatelGpsDriver
          echo "/opt/carma/src/CARMANovatelGpsDriver/novatel_gps_driver"
          ls /opt/carma/src/CARMANovatelGpsDriver/novatel_gps_driver
          cp -r /opt/carma/src/CARMANovatelGpsDriver .
          cp -r /opt/carma/bw-output .
          cp -r /opt/carma/coverage_reports .
          echo "Workspace:"
          find .

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: CARMANovatelGpsDriver/novatel_gps_driver
          args: >
            -Dsonar.projectKey=usdot-fhwa-stol_CARMANovatelGpsDriver
            -Dsonar.organization=usdot-fhwa-stol
            -Dsonar.cfamily.build-wrapper-output=bw-output
            -Dsonar.sources=src
            -Dsonar.cfamily.gcov.reportsPath=coverage_reports/gcov
            -Dsonar.tests=test
            -Dsonar.scm.disabled=false
            -Dsonar.scm.enabled=true
            -Dsonar.scm.provider=git
